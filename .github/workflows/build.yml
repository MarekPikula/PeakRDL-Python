name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types:
      - published


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.2.1"

      - name: Install dependencies
        run: poetry install

      - name: Test
        run: poetry run pytest test/ --cov=peakrdl_python_simple --cov-report=term --cov-report=xml:output/coverage/cov.xml --cov-report=html:output/coverage/html

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "repo_token: ${GITHUB_TOKEN}" > .coveralls.yml
          poetry run coveralls --service=github

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.2.1"
      - name: Install dependencies
        run: poetry install
      - name: Run formatter
        run: poetry run black --check --diff src/ test/

  pydocstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.2.1"
      - name: Install dependencies
        run: poetry install
      - name: Run pydocstyle linter
        run: poetry run pydocstyle src/ test/

  pycodestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.2.1"
      - name: Install dependencies
        run: poetry install
      - name: Run pycodestyle linter
        run: poetry run pycodestyle --ignore=E203,E402,E501,W503 src/ test/

  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.2.1"
      - name: Install dependencies
        run: poetry install
      - name: Run pycodestyle linter
        run: poetry run pylint src/ test/

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.2.1"
      - name: Install dependencies
        run: poetry install
      - name: Run mypy check
        run: poetry run mypy src/

  build-publish:
    needs:
      - test
      - black
      - pycodestyle
      - pydocstyle
      - pylint
      - mypy
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.2.1"
      - name: Build the package
        run: poetry build
      - name: Upload the built package
        uses: actions/upload-artifact@v2
        with:
          path: dist/
      - name: Publish the package
        run: |
          poetry config http-basic.pypi __token__ ${{ secrets.PYPI_PASSWORD }}
          poetry publish --skip-existing
